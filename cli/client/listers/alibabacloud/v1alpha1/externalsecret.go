// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/AliyunContainerService/ack-secret-manager/cli/pkg/apis/alibabacloud/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ExternalSecretLister helps list ExternalSecrets.
// All objects returned here must be treated as read-only.
type ExternalSecretLister interface {
	// List lists all ExternalSecrets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ExternalSecret, err error)
	// ExternalSecrets returns an object that can list and get ExternalSecrets.
	ExternalSecrets(namespace string) ExternalSecretNamespaceLister
	ExternalSecretListerExpansion
}

// externalSecretLister implements the ExternalSecretLister interface.
type externalSecretLister struct {
	indexer cache.Indexer
}

// NewExternalSecretLister returns a new ExternalSecretLister.
func NewExternalSecretLister(indexer cache.Indexer) ExternalSecretLister {
	return &externalSecretLister{indexer: indexer}
}

// List lists all ExternalSecrets in the indexer.
func (s *externalSecretLister) List(selector labels.Selector) (ret []*v1alpha1.ExternalSecret, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ExternalSecret))
	})
	return ret, err
}

// ExternalSecrets returns an object that can list and get ExternalSecrets.
func (s *externalSecretLister) ExternalSecrets(namespace string) ExternalSecretNamespaceLister {
	return externalSecretNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ExternalSecretNamespaceLister helps list and get ExternalSecrets.
// All objects returned here must be treated as read-only.
type ExternalSecretNamespaceLister interface {
	// List lists all ExternalSecrets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ExternalSecret, err error)
	// Get retrieves the ExternalSecret from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ExternalSecret, error)
	ExternalSecretNamespaceListerExpansion
}

// externalSecretNamespaceLister implements the ExternalSecretNamespaceLister
// interface.
type externalSecretNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ExternalSecrets in the indexer for a given namespace.
func (s externalSecretNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ExternalSecret, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ExternalSecret))
	})
	return ret, err
}

// Get retrieves the ExternalSecret from the indexer for a given namespace and name.
func (s externalSecretNamespaceLister) Get(name string) (*v1alpha1.ExternalSecret, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("externalsecret"), name)
	}
	return obj.(*v1alpha1.ExternalSecret), nil
}
