apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ack-secret-manager.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: {{ include "ack-secret-manager.name" . }}
    helm.sh/chart: {{ include "ack-secret-manager.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ack-secret-manager.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ack-secret-manager.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if .Values.podLabels }}
          {{- toYaml .Values.podLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "ack-secret-manager.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          command:
            - ack-secret-manager
            - --token-rotation-period={{ .Values.command.tokenRotationPeriod }}
            - --reconcile-period={{ .Values.command.reconcilePeriod }}
            - --reconcile-count={{ .Values.command.reconcileCount }}
            - --polling-interval={{ .Values.command.pollingInterval }}
            - --disable-polling={{ .Values.command.disablePolling }}
            - --region={{ .Values.command.region }}
            - --max-concurrent-kms-secret-pulls={{ .Values.command.maxConcurrentKmsSecretPulls }}
            - --max-concurrent-oos-secret-pulls={{ .Values.command.maxConcurrentOosSecretPulls }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: WATCH_NAMESPACE
              value: {{ .Values.env.WATCH_NAMESPACE }}
          {{- range $name, $value := .Values.env }}
          {{- if not (empty $value) }}
            - name: {{ $name | quote }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
            # Params for env vars populated from k8s secrets
          {{- range $key, $value := .Values.envVarsFromSecret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value.secretKeyRef | quote }}
                  key: {{ $value.key | quote }}
          {{- end }}
          {{- if .Values.rrsa.enable }}
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: {{ template "ack-secret-manager.serviceAccountName" . }}
          {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if .Values.rrsa.enable }}
      - name: {{ template "ack-secret-manager.serviceAccountName" . }}
        projected:
          sources:
          - serviceAccountToken:
              path: ack-secret-manager
              expirationSeconds: 7200
              audience: "sts.aliyuncs.com"
      {{- end }}
