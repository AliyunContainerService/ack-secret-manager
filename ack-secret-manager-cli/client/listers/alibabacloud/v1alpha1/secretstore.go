// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/AliyunContainerService/ack-secret-manager/ack-secret-manager-cli/pkg/apis/alibabacloud/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SecretStoreLister helps list SecretStores.
// All objects returned here must be treated as read-only.
type SecretStoreLister interface {
	// List lists all SecretStores in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SecretStore, err error)
	// SecretStores returns an object that can list and get SecretStores.
	SecretStores(namespace string) SecretStoreNamespaceLister
	SecretStoreListerExpansion
}

// secretStoreLister implements the SecretStoreLister interface.
type secretStoreLister struct {
	indexer cache.Indexer
}

// NewSecretStoreLister returns a new SecretStoreLister.
func NewSecretStoreLister(indexer cache.Indexer) SecretStoreLister {
	return &secretStoreLister{indexer: indexer}
}

// List lists all SecretStores in the indexer.
func (s *secretStoreLister) List(selector labels.Selector) (ret []*v1alpha1.SecretStore, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecretStore))
	})
	return ret, err
}

// SecretStores returns an object that can list and get SecretStores.
func (s *secretStoreLister) SecretStores(namespace string) SecretStoreNamespaceLister {
	return secretStoreNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SecretStoreNamespaceLister helps list and get SecretStores.
// All objects returned here must be treated as read-only.
type SecretStoreNamespaceLister interface {
	// List lists all SecretStores in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SecretStore, err error)
	// Get retrieves the SecretStore from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SecretStore, error)
	SecretStoreNamespaceListerExpansion
}

// secretStoreNamespaceLister implements the SecretStoreNamespaceLister
// interface.
type secretStoreNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SecretStores in the indexer for a given namespace.
func (s secretStoreNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SecretStore, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SecretStore))
	})
	return ret, err
}

// Get retrieves the SecretStore from the indexer for a given namespace and name.
func (s secretStoreNamespaceLister) Get(name string) (*v1alpha1.SecretStore, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("secretstore"), name)
	}
	return obj.(*v1alpha1.SecretStore), nil
}
